note on irregularities in the contemporary (texts and elicitation) .flextext data

0. the gloss attribute name for Bakblau "Bak Hėkė kita akan pelihara" (line: 10299) must be changed to "id"

1. the gloss element name for (the followings are for the ELICATION)

	"dia membeli dengan anaknya buku", (line 108112)
	"di meninggalkan rumah", (line 107522)
	"saya membunuh dua laki-laki", (line 98814 & 98926) 
	"jangan mendekat, akan dibunuh kamu nanti" (line 97977), 
	"kalian datang kalian pergi" (line 87005), 
	"kamu akan membunuh saya" (98296), 
	"Setelah selesai makan, mereka pun kembali bekerja" (142133)
	"saya membuat anak itu  jatuh dari pohon" (312635)
	
needs to be change to "id"

2. The "whose child is naughty? Pak Dendi's child" needs to be split into 114.1 and 114.2
	- move the "whose child is naughty" to the free translation of 114.1 (line 167396)

3. "saya tidak melihat dia tadi" (355419), "saya tidak dilihatnya'" needs to be changed to "id" from "eno" (355485)


The homonym ID of "eit" (pisang) in Cara Bertani line 90 needs to be changed from now "it2" ('drink') becomes "it1" ('pisang')
- search term: kikoh, eit
- line (202363)

=====================================================================


# bulk processing the complex form type

0. Show the "Variant of" column and "Complex Form Type" column

1. First, filter the headword by regex to see two-lexemes form using: ^[^ ]+\s[^ ]+

	1.1. then, in the Complex form type column, filter by "Non-blanks"
	1.1.1 then, change "dak tau nya" and "tau nya" into "compound"
	1.1.2 change "tarian perang" into "compound"
	1.1.3 change "epuru umde", "puru ub" into "derivative"
	1.1.4 change "kak tuo'", "kak tuode" into "derivative"
	1.1.5 change "bak kaha'1" into "compound" and add "kaha'1" with the specific sense '1 n day' as the component
	1.1.6 change "bak kaha'3" into "compound" and add "bak1" with the specific sense '1 n eye' as the component
	
2. Second, filter the reduplicated form using regex: ^[^-]{2,}[-][^-]{2,}$

	2.1. then go to "Bulk Edit Entries" under the "List Choice" tab
	2.2. target field is "Complex Form Types" and change that into "Derivative" and check "Replace existing items"
	2.3. click "Preview". Inspect, then, if OK, click "Apply".

3. Third, filter the remaining "Unspecified Complex Form"

	3.1. Test filter the Headword if there is any whitespace using regex \s (output: empty)
	3.2. Test filter the Headword with regex for punctuation dash \- to see the remaining reduplicated form (output: there are still some!)
		
		3.2.1 Bulk edit the complex form type of these reduplicated form following step 2 above
		
	3.3. Go back to the "Unspecified Complex Form" filter in step 3.
	3.4. Filter the punctuation of exclamation mark (no regex/normal search with: ǃ) (see 3.4.1 below)
		
		3.4.1. Change "a'noke!", "a'nokea!", "na'a!", and "pua!" into "Derivative"
			(for the next step, better directly filter these words using regex) 
			(NEED TO COPY-AND-PASTE THE ABOVE EXCLAMATION MARK TO GET A MATCH!)
			(regex: a'nokea?ǃ|na'aǃ|puaǃ) <- this regex works
		3.4.2. Bulk edit entries these words into "Derivative"

4. Fourth, filter for the remaining "Unspecified Complex Form"

		4.1. Filter the Headword that:
			- has NO exclamation mark
			- has not begun with capital letter
			- has two or more characters 
			(copy this regex: ^[^A-Z]{2,}[^ǃ]$ then check "Mark case")
		4.2. Bulk Edit Entries the Complex Form Types of these headwords into Derivative

5. Fifth, following the above four procedures, the remaining "Unspecified Complex Form" types are only 30 items! More managable!

	5.1. change "du" 'said' into "Derivative" of "'u"
	5.2. change "Ekano2" into "Derivative" of "Kano"
	5.3. change "yi" 'existence' into "Derivative" of "i1"
	5.4. keep headwords that appear to be variant of the lexical entry